
plugins {
    id "com.jetbrains.python.envs" version "0.0.26"
}

apply plugin: 'com.android.library'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'

android {
    ndkVersion rootProject.ext.build.ndkVersion
    compileSdkVersion rootProject.ext.build.compileSdkVersion

    defaultConfig {
        minSdkVersion rootProject.ext.build['minSdkVersion']
        targetSdkVersion rootProject.ext.build['targetSdkVersion']

        buildConfigField("String", "LIBRARY_VERSION", "\"${rootProject.ext.library.version}\"")
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            consumerProguardFiles "$rootDir/proguard-rules-consumer-jna.pro"
        }
    }

    sourceSets {
        main {
            java {
                srcDir '../external/glean/glean-core/android/src/main/java'
            }
        }
    }

    // This is required to support new AndroidX support libraries.
    // See mozilla-mobile/android-components#842
    compileOptions {
        sourceCompatibility 1.8
        targetCompatibility 1.8
    }

    tasks.withType(org.jetbrains.kotlin.gradle.tasks.KotlinCompile).all {
        kotlinOptions {
            jvmTarget = 1.8
        }
    }
}

dependencies {
    implementation "net.java.dev.jna:jna:$jna_version@aar"
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:1.3.5"
    implementation "androidx.annotation:annotation:1.1.0"
    implementation "androidx.lifecycle:lifecycle-extensions:2.1.0"
    implementation "androidx.lifecycle:lifecycle-common:2.1.0"
    implementation "androidx.work:work-runtime-ktx:2.2.0"

    implementation project(":native-support")
    api project(":full-megazord")

    // We need a compileOnly dependency on the following block of testing
    // libraries in order to expose the GleanTestRule to applications/libraries
    // using the Glean SDK.
    // We can't simply create a separate package otherwise we would need
    // to provide a public API for the testing package to access the
    // Glean internals, which is something we would not want to do.
    compileOnly "junit:junit:4.12"
    compileOnly "androidx.work:work-testing:2.2.0"
}

apply from: "$rootDir/publish.gradle"

apply from: '../external/glean/gradle-plugin/src/main/groovy/mozilla/telemetry/glean-gradle-plugin/GleanGradlePlugin.groovy'
ext.gleanYamlFiles = [
    "../external/glean/glean-core/metrics.yaml",
    "../external/glean/glean-core/android/metrics.yaml",
    "../external/glean/glean-core/pings.yaml",
]
ext.allowGleanInternal = true
ext.gleanNamespace = "mozilla.telemetry.glean"
ext.glean_plugin.apply(project)

ext.configurePublish()