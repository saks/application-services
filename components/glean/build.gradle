// =============================================
// We're doing something a bit weird here, so
// READ THIS CAREFULLY before editing this file.
// =============================================
//
// This is a lightly-modified version of the `build.gradle` file from Glean,
// which you can find at `../external/glean/glean-core/android/build.gradle`.
//
// The aim here is to pre-package the Glean Kotlin code and publish it under
// `org.mozilla.appservices:glean` rather than `org.mozilla.telemetry:glean`,
// and to make it depend on `org.mozilla.appservices:full-megazord` for the
// compiled Rust code.
//
// We expect consumers that want to use Glean and AppServices together, will
// use our re-packaged version rather than standalone Glean.
//
// In order for this to work without heavy modification to the underlying
// Glean code, we've duplicated much of the logic from Glean's standard
// build file, including the use of the glean gradle plugin to generate
// the standard builtin metrics. As upstream changes happen in Glean's build
// process we will need to duplicate them in this file.

plugins {
    id "com.jetbrains.python.envs" version "0.0.26"
}

apply plugin: 'com.android.library'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'

android {
    ndkVersion rootProject.ext.build.ndkVersion
    compileSdkVersion rootProject.ext.build.compileSdkVersion

    defaultConfig {
        minSdkVersion rootProject.ext.build['minSdkVersion']
        targetSdkVersion rootProject.ext.build['targetSdkVersion']

        buildConfigField("String", "LIBRARY_VERSION", "\"${rootProject.ext.library.version}\"")
        buildConfigField("String", "GLEAN_JNA_LIBRARY_NAME", "\"megazord\"")
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            consumerProguardFiles "$rootDir/proguard-rules-consumer-jna.pro"
        }
    }

    // We don't have any source files of our own, we're re-packaging the ones
    // from the Glean repo (which is included as a submodule in our repo).
    sourceSets {
        main {
            java {
                srcDir '../external/glean/glean-core/android/src/main/java'
            }
        }
    }

    // This is required to support new AndroidX support libraries.
    // See mozilla-mobile/android-components#842
    compileOptions {
        sourceCompatibility 1.8
        targetCompatibility 1.8
    }

    tasks.withType(org.jetbrains.kotlin.gradle.tasks.KotlinCompile).all {
        kotlinOptions {
            jvmTarget = 1.8
        }
    }
}

dependencies {
    implementation "net.java.dev.jna:jna:$jna_version@aar"
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:1.3.5"
    implementation "androidx.annotation:annotation:1.1.0"
    implementation "androidx.lifecycle:lifecycle-extensions:2.1.0"
    implementation "androidx.lifecycle:lifecycle-common:2.1.0"
    implementation "androidx.work:work-runtime-ktx:2.2.0"

    // Unlike standard Glean which builds a standalone package, this version depends
    // on `:full-megazord` for the underlying native library. The full-megazord needs
    // to be configured to include the corresponding Glean FFI functions.
    implementation project(":native-support")
    api project(":full-megazord")

    // Glean needs a compileOnly dependency on the following block of testing
    // libraries in order to expose the GleanTestRule to applications/libraries
    // using the Glean SDK.
    compileOnly "junit:junit:4.12"
    compileOnly "androidx.work:work-testing:2.2.0"
}

apply from: "$rootDir/publish.gradle"

// Use the Glean Gradle plugin to generate the builtin metrics definitions for Glean itself.
// We have to pretend that we're Glean here in order to generate internal-only definitions.
apply from: '../external/glean/gradle-plugin/src/main/groovy/mozilla/telemetry/glean-gradle-plugin/GleanGradlePlugin.groovy'
ext.gleanYamlFiles = [
    "../external/glean/glean-core/metrics.yaml",
    "../external/glean/glean-core/android/metrics.yaml",
    "../external/glean/glean-core/pings.yaml",
]
ext.allowGleanInternal = true
ext.gleanNamespace = "mozilla.telemetry.glean"
ext.glean_plugin.apply(project)

ext.configurePublish()